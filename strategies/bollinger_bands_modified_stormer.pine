// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© AugustoErni

//@version=5
strategy('Bollinger Bands Modified (Stormer)', overlay=true, process_orders_on_close=true, calc_on_every_tick=false, initial_capital=12000, currency=currency.USD, default_qty_type=strategy.percent_of_equity, default_qty_value=20, pyramiding=0, commission_type=strategy.commission.percent, commission_value=0.12)

bbL = input.int(20, title='BB Length', step=1, tooltip='Calculate the length of bollinger bands.')
mult = input.float(0.38, title='BB Standard Deviation', step=0.01, tooltip='Calculate the standard deviation of bollinger bands.')
target_factor = input.float(1.6, title='Target Take Profit', step=0.1, tooltip='Calculate the take profit factor when entry position.')
emaL = input.int(80, title='EMA Length', step=1, tooltip='Calculate the length of EMA.')
emaTrend = input.bool(true, title='Check Trend EMA', tooltip='Use EMA as trend verify for opening position.')

source = close
ema = ta.ema(source, emaL)
basis = ta.sma(source, bbL)
dev = mult * ta.stdev(source, bbL)
upper = basis + dev
lower = basis - dev

isLongCross = ta.crossover(source, upper) ? 1 : 0
isShortCross = ta.crossunder(source, lower) ? 1 : 0

isCandleAboveEma = source > ema
isCandleBelowEma = source < ema

isLongCondition = emaTrend ? isLongCross and isCandleAboveEma : isLongCross
isShortCondition = emaTrend ? isShortCross and isCandleBelowEma : isShortCross

highestHigh = ta.highest(high, 7)
lowestLow = ta.lowest(low, 7)

// highestHigh = ((high + high[1] + high[2] + high[3] + high[4] + high[5] + high[6] + high[7]) / 8)
// lowestLow = ((low + low[1] + low[2] + low[3] + low[4] + low[5] + low[6] + low[7]) / 8)

isPositionNone = strategy.position_size == 0 ? 1 : 0
isPositionLong = strategy.position_size > 0 ? 1 : 0
isPositionShort = strategy.position_size < 0 ? 1 : 0

var float stopLossLong = 0.0
var float targetLong = 0.0
var float stopLossShort = 0.0
var float targetShort = 0.0
var bool isLongEntry = false
var bool isShortEntry = false

if (isPositionNone)
    isLongEntry := false
    isShortEntry := false
    stopLossLong := 0.0
    targetLong := 0.0
    stopLossShort := 0.0
    targetShort := 0.0
if (isPositionLong and isLongEntry)
    isLongEntry := true
    isShortEntry := false
    stopLossShort := 0.0
    targetShort := 0.0
if (isPositionShort and isShortEntry)
    isShortEntry := true
    isLongEntry := false
    stopLossLong := 0.0
    targetLong := 0.0

if (isLongCondition and not isLongEntry)
    isLongEntry := true
    stopLossLong := lowestLow
    targetLong := source + math.abs(source - stopLossLong) * target_factor
    strategy.entry('Long', strategy.long)
    strategy.exit('Exit Long', 'Long', stop=stopLossLong, limit=targetLong)

if (isShortCondition and not isShortEntry)
    isShortEntry := true
    stopLossShort := highestHigh
    targetShort := source - math.abs(source - stopLossShort) * target_factor
    strategy.entry('Short', strategy.short)
    strategy.exit('Exit Short', 'Short', stop=stopLossShort, limit=targetShort)

plot(upper, color=color.blue)
plot(basis, color=color.gray)
plot(lower, color=color.blue)
plot(ema, color=color.white)
// plot(stopLossLong, 'stopLossLong')
// plot(targetLong, 'targetLong')
// plot(stopLossShort, 'stopLossShort')
// plot(targetShort, 'targetShort')
// plot(isLongEntry ? 1 : 0, 'isLongEntry')
// plot(isShortEntry ? 1 : 0, 'isShortEntry')
// plot(strategy.position_size, 'strategy.position_size')
